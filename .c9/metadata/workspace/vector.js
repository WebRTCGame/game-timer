{"filter":false,"title":"vector.js","tooltip":"/vector.js","ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":221,"column":2},"end":{"row":221,"column":2},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":8,"state":"start","mode":"ace/mode/javascript"}},"hash":"b9fbd867bf46aa5af90de4b45cff2fe685a8869a","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":221,"column":2},"action":"insert","lines":["/*jshint camelcase: true, browser:true, maxlen: 100, curly: true, eqeqeq: true, immed: true, latedef: true, noarg: true, noempty: true, nonew: true, quotmark: true, undef: true, unused: true, strict: true, maxdepth: 3, maxstatements:20, maxcomplexity: 5 */","/* global $:true, Vector:true, Fish:true, Food:true */","","// helper library to work with vectors","","","function Point(x,y){","\tthis.x = x || 0;","\tthis.y = y || 0;","};","","Point.prototype.toVector = function(){","\treturn new Vector(this.x,this.y);","};","function Vector(x, y) {","\tthis.x = x || 0;","\tthis.y = y || 0;","}","","Vector.prototype = {","\tset: function(x, y) {","\t\tthis.x = x;","\t\tthis.y = y;","","\t\treturn this;","\t},","","","\tadd: function(v) {","\t\tthis.x += v.x;","\t\tthis.y += v.y;","","\t\treturn this;","\t},","","\tsub: function(v) {","\t\tthis.x -= v.x;","\t\tthis.y -= v.y;","","\t\treturn this;","\t},","\tsubtract: function(v){","\t\treturn this.sub(v);","\t},","","\tmul: function(s) {","\t\tthis.x *= s;","\t\tthis.y *= s;","","\t\treturn this;","\t},","\tmultiply: function(s){","\t\t","\t\treturn this.mul(s);","\t},","\tdiv: function(s) {","\t\t!s && console.log('Division by zero!');","","\t\tthis.x /= s;","\t\tthis.y /= s;","","\t\treturn this;","\t},","\tdivide: function(s){","\t\treturn this.div(s)","\t},","\tmag: function() {","\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);","\t},","\tmagnitude: function(){","\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);","\t},","\tlength: function(){","\t\treturn this.mag();","\t},","\ttruncate: function(value){","\t\tif (this.length()>value){","\t\t\tthis.normalize();","\t\t\tthis.multiply(value);","\t\t}","\t\treturn this;","\t},","\tnormalize: function() {","\t\t'use strict';","\t\tconst mag = this.magnitude();","\t\tmag && this.div(mag);","\t\treturn this;","\t},","\tunit: function() {","\t\t'use strict';","\t\tconst mag = this.mag();","\t\treturn new Vector(this.x / mag, this.y / mag);","\t},","\tangle: function() {","\t\treturn Math.atan2(this.y, this.x);","\t},","\tsetMag: function(m) {","\t\t'use strict';","\t\tconst angle = this.angle();","\t\tthis.x = m * Math.cos(angle);","\t\tthis.y = m * Math.sin(angle);","\t\treturn this;","\t},","\tsetAngle: function(a) {","\t\t'use strict';","\t\tconst mag = this.mag();","\t\tthis.x = mag * Math.cos(a);","\t\tthis.y = mag * Math.sin(a);","\t\treturn this;","\t},","\trotate: function(a) {","\t\tthis.setAngle(this.angle() + a);","\t\treturn this;","\t},","\tlimit: function(l) {","\t\t'use strict';","\t\tconst mag = this.mag();","\t\tif (mag > l) {","\t\t\tthis.setMag(l);","\t\t}","\t\treturn this;","\t},","\tangleBetween: function(v) {","\t\treturn this.angle() - v.angle();","\t},","\tdot: function(v) {","\t\treturn this.x * v.x + this.y * v.y;","\t},","\tlerp: function(v, amt) {","\t\tthis.x += (v.x - this.x) * amt;","\t\tthis.y += (v.y - this.y) * amt;","\t\treturn this;","\t},","\tdist: function(v) {","\t\t'use strict';","\t\tconst dx = this.x - v.x;","\t\tconst dy = this.y - v.y;","\t\treturn Math.sqrt(dx * dx + dy * dy);","\t},","\tnear: function(v,length){","\t\treturn this.dist(v) < length;","\t},","\tcopy: function() {","\t\treturn new Vector(this.x, this.y);","\t},","\tclone: function() {","\t\treturn this.copy();","\t},","\ttoString: function() {","\t\treturn 'x: ' + this.x & ' | y: ' + this.y;","\t},","\ttoArray: function() {","\t\treturn [this.x, this.y];","\t},","\tmix: function(v, amount) {","\t\tif (typeof amount === 'undefined') {","\t\t\tamount = 0.5;","\t\t}","\t\tthis.x = (1 - amount) * this.x + amount * v.x;","\t\tthis.y = (1 - amount) * this.y + amount * v.y;","\t\treturn this;","\t},","\tzero: function() {","\t\tthis.x = this.y = 0;","\t},","\tcross: function(v) {","\t\treturn (this.x * v.y) - (this.y * v.x);","\t},","\tprojectOnto: function(vec2) {","\t\t'use strict';","\t\tconst coeff = ((this.x * vec2.x) + (this.y * vec2.y)) / ((vec2.x * vec2.x) + (vec2.y * vec2.y));","\t\tthis.x = coeff * vec2.x;","\t\tthis.y = coeff * vec2.y;","\t\treturn this;","\t},","\thorizontalAngle: function() {","\t\treturn Math.atan2(this.y, this.x);","\t},","\tverticalAngle: function() {","\t\treturn Math.atan2(this.x, this.y);","\t},","\tlengthSq: function() {","\t\treturn this.x * this.x + this.y * this.y;","\t},","\tisEqualTo: function(v) {","\t\treturn this.x === v.x && this.y === v.y;","\t},","\ttoObject: function() {","\t\treturn {","\t\t\tx: this.x,","\t\t\ty: this.y","\t\t};","\t},","\tperpRight: function() {","\t\treturn new Vector(-this.y, this.x);","\t},","\tclamp: function(vMin,vMax){","\t\tif (this.x < vMin.x) {this.x = vMin.x} else if (this.x > vMax.x){this.x = vMax.x}","\t\tif (this.y < vMin.y){this.y = vMin.y}else if (this.y > vMax.y){this.y = vMax.y}","\t\treturn this;","\t},","\tclampScalar: function(min,max){","\t\tif (this.x < min) {this.x = min} else if (this.x > max){this.x = max}","\t\tif (this.y < min){this.y = min}else if (this.y > max){this.y = max}","\t\treturn this;","\t},","\tceil: function(){","\t\tthis.x = Math.ceil(this.x);","\t\tthis.y = Math.ceil(this.y);","\t\treturn this;","\t},","\tfloor: function(){","\t\tthis.x = Math.floor(this.x);","\t\tthis.y = Math.floor(this.y);","\t\treturn this;","\t},","\tnegate: function(){","\t\tthis.x = - this.x;","\t\tthis.y = - this.y;","\t\treturn this;","\t}","};"]}]}]]},"timestamp":1429708801000}